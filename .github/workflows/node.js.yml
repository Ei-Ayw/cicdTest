name: Deploy to Server

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to server (prepare dirs & backup)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          set -e
          APP_DIR="/var/www/vue3-app"
          REMOTE_USER="$(whoami)"
          
          # 创建部署目录
          sudo mkdir -p "${APP_DIR}"
          
          # 备份当前版本（如果存在）
          if [ -d "${APP_DIR}/current" ]; then
            sudo mv "${APP_DIR}/current" "${APP_DIR}/backup-$(date +%Y%m%d-%H%M%S)"
          fi
          
          # 创建新的部署目录并临时授予上传用户权限，避免上传失败
          sudo mkdir -p "${APP_DIR}/current"
          sudo chown -R "${REMOTE_USER}:${REMOTE_USER}" "${APP_DIR}"
          
    - name: Upload build files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        source: "dist/*"
        target: "/var/www/vue3-app/current"
        strip_components: 1
        
    - name: Configure Nginx and reload
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          set -e
          APP_DIR="/var/www/vue3-app"
          
          # 识别 Nginx 主配置路径和目录（兼容宝塔/标准安装）
          NGINX_CONF_PATH="$(nginx -V 2>&1 | sed -n 's/.*--conf-path=\([^ ]*\).*/\1/p')"
          if [ -z "$NGINX_CONF_PATH" ]; then
            # 回退到常见默认路径
            if [ -f "/etc/nginx/nginx.conf" ]; then
              NGINX_CONF_PATH="/etc/nginx/nginx.conf"
            elif [ -f "/www/server/nginx/conf/nginx.conf" ]; then
              NGINX_CONF_PATH="/www/server/nginx/conf/nginx.conf"
            fi
          fi
          NGINX_DIR="$(dirname "$NGINX_CONF_PATH")"
          
          # 选择站点配置目录（优先宝塔面板路径，其次标准路径）
          if [ -d "/www/server/panel/vhost/nginx" ]; then
            SITE_DIR="/www/server/panel/vhost/nginx"
          elif [ -d "$NGINX_DIR/vhost" ]; then
            SITE_DIR="$NGINX_DIR/vhost"
          elif [ -d "$NGINX_DIR/conf.d" ] || grep -q "include .*conf.d/\\*.conf" "$NGINX_CONF_PATH" 2>/dev/null; then
            SITE_DIR="$NGINX_DIR/conf.d"
          else
            SITE_DIR="$NGINX_DIR/conf.d"
            sudo mkdir -p "$SITE_DIR"
          fi
          SITE_CONF="$SITE_DIR/vue3-app.conf"
          
          # 写入站点配置
          sudo tee "$SITE_CONF" > /dev/null <<EOF
          server {
              listen 8083;
              server_name _;
              root /var/www/vue3-app/current;
              index index.html;
              
              # 处理 Vue Router 的 history 模式
              location / {
                  try_files \$uri \$uri/ /index.html;
              }
              
              # 静态资源缓存
              location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                  expires 1y;
                  add_header Cache-Control "public, immutable";
              }
              
              # 安全头
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header X-XSS-Protection "1; mode=block" always;
          }
          EOF
          
          # 测试并重载/启动 Nginx
          sudo nginx -t
          if command -v systemctl >/dev/null 2>&1; then
            sudo systemctl reload nginx || true
          fi
          if [ -x "/etc/init.d/nginx" ]; then
            sudo /etc/init.d/nginx reload || true
          fi
          sudo nginx -s reload || true
          # 若未运行则启动（首启兜底）
          if ! pgrep -x nginx >/dev/null 2>&1; then
            sudo nginx || true
          fi
          
          # 为所有活跃 zone 开放 8083 端口（如启用 firewalld）
          if command -v firewall-cmd >/dev/null 2>&1; then
            for Z in $(firewall-cmd --get-active-zones | awk 'NR%2==1'); do
              sudo firewall-cmd --permanent --zone="$Z" --add-port=8083/tcp || true
            done
            sudo firewall-cmd --reload || true
          fi
          
          # 调整目录归属（优先 www:www，其次 nginx:nginx，否则保持不变）
          if id -u www >/dev/null 2>&1; then
            OWNER="www:www"
          elif id -u nginx >/dev/null 2>&1; then
            OWNER="nginx:nginx"
          else
            OWNER=""
          fi
          if [ -n "$OWNER" ]; then
            sudo chown -R "$OWNER" "$APP_DIR"
          fi
          sudo chmod -R 755 "$APP_DIR"
          
          echo "部署完成！"
          echo "应用已部署到: http://${{ secrets.SERVER_HOST }}:8083"
